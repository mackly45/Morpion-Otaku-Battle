name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Python syntax
      run: |
        echo "Testing Python syntax..."
        python -m py_compile app.py
        python -m py_compile model/game_model.py
        python -m py_compile model/ai_player.py
        echo "âœ… All Python files compile successfully"
    
    - name: Test Flask Application
      run: |
        echo "Testing Flask application..."
        python -c "
        import sys
        sys.path.append('.')
        from app import app
        with app.test_client() as client:
            response = client.get('/')
            assert response.status_code == 200
            print('âœ… Flask server test passed')
        "
    
    - name: Test Game Model
      run: |
        echo "Testing game model..."
        python -c "
        import sys
        sys.path.append('.')
        from model.game_model import MorpionModel
        game = MorpionModel()
        game.choisir_personnages('goku', 'luffy')
        assert game.joueur1.nom == 'Goku'
        assert game.joueur2.nom == 'Luffy'
        print('âœ… Game model test passed')
        "
        echo "All tests completed successfully! ðŸŽ®"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        publish_branch: gh-pages